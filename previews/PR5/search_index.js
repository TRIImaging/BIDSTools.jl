var documenterSearchIndex = {"docs":
[{"location":"index.html#BIDSTools-1","page":"Home","title":"BIDSTools","text":"","category":"section"},{"location":"index.html#","page":"Home","title":"Home","text":"Tools for working with Brain Imaging Data Structure (BIDS) from Julia.","category":"page"},{"location":"index.html#","page":"Home","title":"Home","text":"For more info on BIDS, read the documentation","category":"page"},{"location":"index.html#Features-1","page":"Home","title":"Features","text":"","category":"section"},{"location":"index.html#","page":"Home","title":"Home","text":"Working with BIDS Directory easily \nFlexible usage - initialize single object as you wish\nQuery to get the desired files\nOther utility functions such as total_sessions, parse_fname, parse_path, etc.","category":"page"},{"location":"index.html#Quick-start-1","page":"Home","title":"Quick start","text":"","category":"section"},{"location":"index.html#","page":"Home","title":"Home","text":"julia> using BIDSTools\n\njulia> layout = Layout(\"/path/to/bids/root/\")\nLayout:\n    root = /path/to/bids/root/\n    total subject = 125\n    total session = 137\n    total files = 2945\n\njulia> for sub in layout.subjects\n           for ses in sub.sessions\n               for file in ses.files\n                   # do something\n               end\n           end\n       end\n\njulia> files = get_files(layout, path=\"Subtest\", run=\"002\")\n1-element Array{File,1}:\n File:\n    path = /path/to/bids/root/sub-Subtest/ses-2/mrs/sub-Subtest_ses-2_acq-96inc_loc-pcg_spec-uns_run-002_mod-cosy_fid.tsv\n    metadata_exist = true","category":"page"},{"location":"module.html#Module-1","page":"Module","title":"Module","text":"","category":"section"},{"location":"module.html#","page":"Module","title":"Module","text":"BIDSTools parsed a directory into Julia objects Layout, Subject, Session, and File.  Basically, the idea is Layout consists of Subject, Subject consists of Session (there will always be 1 session in non-longitudinal study), and Session contains File. ","category":"page"},{"location":"module.html#","page":"Module","title":"Module","text":"CurrentModule = BIDSTools\nDocTestSetup = quote\n\tusing .BIDSTools\nend","category":"page"},{"location":"module.html#","page":"Module","title":"Module","text":"Modules = [BIDSTools]\nOrder   = [:type, :function]\nPrivate = false","category":"page"},{"location":"module.html#Main.BIDSTools.File","page":"Module","title":"Main.BIDSTools.File","text":"File has following public fields:\n\npath - path to the file\nmetadata - dictionary parsed from JSON-sidecar\nentities - dictionary parsed from key-value filename\n\nThe File can be initialized by specifying only path. Other behavior can also be tweaked accordingly with the optional parameters:\n\nload_metadata::Bool - defaults to true. If true, this expects a JSON-sidecar to be present alongside with every BIDS files.\nrequire_modality::Bool - defaults to true. If true this expects a modality presents in every file name, e.g. sub-subtestses-1run-001_T1w.nii.gz\nstrict::Bool - defaults to true. If true, BIDSTools will throw an error on invalid BIDS filename, this can be turned to false to not parse those file names and display a warning instead. This will result in empty dictionary in entities.\n\nExample\n\njulia> file = File(\"/path/to/bids/root/sub-Subtest/ses-1/anat/sub-Subtest-1_run-001_T1w.nii.gz\")\nFile:\n    path = /path/to/bids/root/sub-Subtest/ses-1/anat/sub-Amelll_ses-1_run-001_T1w.nii.gz\n    metadata_exist = true\n\n\n\n\n\n","category":"type"},{"location":"module.html#Main.BIDSTools.Layout","page":"Module","title":"Main.BIDSTools.Layout","text":"Layout has following public fields:\n\nroot - the root folder of the data\nsubjects - a vector of Subject\nlongitudinal - true if a longitudinal study, i.e. multi-session/multi-visit per subject.\ndescription - dictionary parsed from dataset_description.json.\nsubjects_details - DataFrame from subjects.tsv\n\nThe BIDS directory must follow the specification, i.e. root/sub-<subject_id>/[ses-<session_id>]\n\nThe Layout can be initialized by specifying only root. Other behavior can also be tweaked accordingly with the optional parameters:\n\nsearch::Bool - defaults to true. If true this will search over root to find Subject, Session and Files.\nload_metadata::Bool - defaults to true. If true, this expects a JSON-sidecar to be present alongside with every BIDS files.\nrequire_modality::Bool - defaults to true. If true this expects a modality presents in every file name, e.g. sub-subtestses-1run-001_T1w.nii.gz\nlongitudinal::Bool - defaults to true. If true this expects a session directory ses- exists under subject directory.\nstrict::Bool - defaults to true. If true, BIDSTools will throw errors on invalid BIDS filenames, this can be turned to false to not parse those file names and display a warning instead.\n\nExample\n\njulia> layout = Layout(\"/path/to/bids/root/\")\nLayout:\n    root = \"/path/to/bids/root/\"\n    total subject = 49\n    total session = 74\n    total files = 1161\n\n\n\n\n\n","category":"type"},{"location":"module.html#Main.BIDSTools.Session","page":"Module","title":"Main.BIDSTools.Session","text":"Session has following public fields:\n\npath - path to the session directory\nidentifier - identifier of session, extracted from directory name ses-<session_id>. In non-longitudinal study, this will always be \"1\".\nfiles - a vector of File\nscans_details - DataFrame parsed from *_scans.tsv. If the tsv is not exist, this will be an empty DataFrame\n\nThe Subject can be initialized by specifying only path. Other behavior can also be tweaked accordingly with the optional parameters:\n\nsearch::Bool - defaults to true. If true this will search over root to find Subject, Session and Files.\nload_metadata::Bool - defaults to true. If true, this expects a JSON-sidecar to be present alongside with every BIDS files.\nrequire_modality::Bool - defaults to true. If true this expects a modality presents in every file name, e.g. sub-subtestses-1run-001_T1w.nii.gz\nlongitudinal::Bool - defaults to true. If true this expects a session directory ses- exists under subject directory.\nstrict::Bool - defaults to true. If true, BIDSTools will throw errors on invalid BIDS filenames, this can be turned to false to not parse those file names and display a warning instead.\n\nExample\n\njulia> ses = Session(\"/path/to/bids/root/sub-Subtest/ses-1/\")\nSession:\n    identifier = 1\n    total files = 8\n\n\n\n\n\n","category":"type"},{"location":"module.html#Main.BIDSTools.Subject","page":"Module","title":"Main.BIDSTools.Subject","text":"Subject has following public fields:\n\npath - path to the subject directory\nidentifier - identifier of subject, extracted from directory name sub-<subject_id>\nsessions - a vector of Session\n\nThe Subject can be initialized by specifying only path. Other behavior can also be tweaked accordingly with the optional parameters:\n\nsearch::Bool - defaults to true. If true this will search over root to find Subject, Session and Files.\nload_metadata::Bool - defaults to true. If true, this expects a JSON-sidecar to be present alongside with every BIDS files.\nrequire_modality::Bool - defaults to true. If true this expects a modality presents in every file name, e.g. sub-subtestses-1run-001_T1w.nii.gz\nlongitudinal::Bool - defaults to true. If true this expects a session directory ses- exists under subject directory.\nstrict::Bool - defaults to true. If true, BIDSTools will throw errors on invalid BIDS filenames, this can be turned to false to not parse those file names and display a warning instead.\n\nExample\n\njulia> sub = Subject(\"/path/to/bids/root/sub-Subtest/\")\nSubject:\n    identifier = Subtest\n    total session = 1\n    total files = 8\n\n\n\n\n\n","category":"type"},{"location":"module.html#Main.BIDSTools.construct_fname-Tuple{AbstractDict}","page":"Module","title":"Main.BIDSTools.construct_fname","text":"function construct_fname(entities::AbstractDict; ext::Union{String,Nothing}=nothing)\n\nFunction to construct BIDS filename from entities. It is recommended to use OrderedDict for this purpose to retain the order of the elements. To supply modality, e.g. _T1w, use modality key, i.e. \"modality\"=>\"T1w\".\n\n\n\n\n\n","category":"method"},{"location":"module.html#Main.BIDSTools.get_files-Tuple{Array{File,1}}","page":"Module","title":"Main.BIDSTools.get_files","text":"function get_files(\n    files::Vector{File}; path::Union{String, Regex, Nothing}=nothing, kws...\n)\n\nFunction to query files based on their path, entities, and metadata. path is optional and can be passed as either String or Regex, while entities and metadata can be passed as keyword args, i.e. key=\"value\".\n\nIn addition to querying vector of File, this can also be used to obtain desired files in a Layout, Subject, or Session by simply replacing Vector{File} into desired object.\n\nExample\n\nfiltered_files = get_files(files, path=\"anat\", run=\"002\", modality=\"T1w\")\n\n# Filter from layout only from entities and metadata\nfiltered_files = get_files(layout, run=\"002\", modality=\"T1w\")\n\n\n\n\n\n","category":"method"},{"location":"module.html#Main.BIDSTools.get_metadata_path-Tuple{File}","page":"Module","title":"Main.BIDSTools.get_metadata_path","text":"function get_metadata_path(path)\n\nGet file path of metadata file (json sidecar) for a BIDS path which can be a string or File.\n\n\n\n\n\n","category":"method"},{"location":"module.html#Main.BIDSTools.get_ses-Tuple{File}","page":"Module","title":"Main.BIDSTools.get_ses","text":"function get_ses(\n    path;\n    from_fname::Bool=true,\n    require_modality::Bool=true,\n    strict::Bool=true\n)\n\nFunction to get session_id from path or File object.\n\nThe following keyword arguments can be passed:\n\nfrom_fname::Bool - defaults to true. If true, only looks the session_id from filename, otherwise, looks into full path if session_id can't be found in filename\nrequire_modality::Bool - defaults to true. If true this expects a modality presents in every file name, e.g. sub-subtestses-1run-001_T1w.nii.gz\nstrict::Bool - defaults to true. If true, BIDSTools will throw an error on invalid BIDS filename, this can be turned to false to not parse those file names and display a warning instead. This will result in empty dictionary in entities.\n\nReturns nothing if no session ID found.\n\n\n\n\n\n","category":"method"},{"location":"module.html#Main.BIDSTools.get_sub-Tuple{File}","page":"Module","title":"Main.BIDSTools.get_sub","text":"function get_sub(\n    path;\n    from_fname::Bool=true,\n    require_modality::Bool=true,\n    strict::Bool=true\n)\n\nFunction to get subject_id from path or File object.\n\nThe following keyword arguments can be passed:\n\nfrom_fname::Bool - detauls to true. If true, only looks the subject_id from filename, otherwise, looks into full path if subject_id can't be found in filename\nrequire_modality::Bool - defaults to true. If true this expects a modality presents in every file name, e.g. sub-subtestses-1run-001_T1w.nii.gz\nstrict::Bool - defaults to true. If true, BIDSTools will throw an error on invalid BIDS filename, this can be turned to false to not parse those file names and display a warning instead. This will result in empty dictionary in entities.\n\nReturns nothing if no subject ID found.\n\n\n\n\n\n","category":"method"},{"location":"module.html#Main.BIDSTools.list_scans_detail-Tuple{Session}","page":"Module","title":"Main.BIDSTools.list_scans_detail","text":"function list_scans_detail(session::Session)\n\nFunction to pretty print scans detail spreadsheet (_scans.tsv) using PrettyTables\n\n\n\n\n\n","category":"method"},{"location":"module.html#Main.BIDSTools.list_subject_detail-Tuple{Layout}","page":"Module","title":"Main.BIDSTools.list_subject_detail","text":"function list_subject_detail(layout::Layout)\n\nFunction to pretty print subject spreadsheet (subjects.tsv) using PrettyTables\n\n\n\n\n\n","category":"method"},{"location":"module.html#Main.BIDSTools.parse_fname-Tuple{AbstractString}","page":"Module","title":"Main.BIDSTools.parse_fname","text":"function parse_fname(\n    fname::AbstractString; require_modality::Bool=true, strict::Bool=true\n)\n\nFunction to parse filename keys and values with this following structure <k1>-<v1>_<k2>-<v2>_..._<kn>-<vn>\n\nThe following keyword arguments can be passed:\n\nrequire_modality::Bool - defaults to true. If true this expects a modality presents in every file name, e.g. sub-subtestses-1run-001_T1w.nii.gz\nstrict::Bool - defaults to true. If true, BIDSTools will throw an error on invalid BIDS filename, this can be turned to false to not parse those file names and display a warning instead. This will result in empty dictionary in entities.\n\nThis function returns a dictionary containing those keys and values.\n\n\n\n\n\n","category":"method"},{"location":"module.html#Main.BIDSTools.parse_path-Tuple{File}","page":"Module","title":"Main.BIDSTools.parse_path","text":"function parse_path(path; require_modality::Bool=true, strict::Bool=true)\n\nFunction to parse path of a File to Dictionary. The argument path can be a File or path (any String object implementing AbstractString). This function implements parse_fname.\n\nThe following keyword arguments can be passed:\n\nrequire_modality::Bool - defaults to true. If true this expects a modality presents in every file name, e.g. sub-subtestses-1run-001_T1w.nii.gz\nstrict::Bool - defaults to true. If true, BIDSTools will throw an error on invalid BIDS filename, this can be turned to false to not parse those file names and display a warning instead. This will result in empty dictionary in entities.\n\n\n\n\n\n","category":"method"},{"location":"module.html#Main.BIDSTools.print_dataset_description-Tuple{Layout}","page":"Module","title":"Main.BIDSTools.print_dataset_description","text":"function print_dataset_description(layout::Layout)\n\nFunction to pretty-print dataset description\n\n\n\n\n\n","category":"method"},{"location":"module.html#Main.BIDSTools.total_files-Tuple{Session}","page":"Module","title":"Main.BIDSTools.total_files","text":"function total_files(session::Session)\n\nGet number of files in a session. The argument Session can be changed into Subject or Layout.\n\n\n\n\n\n","category":"method"},{"location":"module.html#Main.BIDSTools.total_sessions-Tuple{Subject}","page":"Module","title":"Main.BIDSTools.total_sessions","text":"function total_sessions(subject::Subject)\n\nGet number of session of a subject. The argument Subject can be changed into Layout.\n\n\n\n\n\n","category":"method"},{"location":"module.html#Main.BIDSTools.total_subjects-Tuple{Layout}","page":"Module","title":"Main.BIDSTools.total_subjects","text":"function total_subjects(layout::Layout)\n\nGet number of subject in the layout\n\n\n\n\n\n","category":"method"}]
}
